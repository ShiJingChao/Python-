"""
    面向对象的两大核心概念: 类和对象
    面向对象的三大特征: 封装 继承 多态

    1. 封装:
        打包, 包装, 包裹,....
        面向对象编程的第一步: 讲究将方法和属性封装到一个类中;

    2. 继承:
        爸爸 儿子, 父子关系

        类与类之间存在了继承关系, 子类就可以继承父类的公有属性和公有方法;
        理解:  子类 是一个特殊的 父类;

        子类: 派生类, 拓展类, subclass
        父类: 超类, 基类, superclass

        继承性:
            1. 子类可以继承父类的属性和方法
            2. 子类可以新增自己的属性和方法
            3. 子类可以重写父类已有的方法
                    如果需要调用父类的功能, 使用super().方法名()

        意义:
            1. 提高代码的重用性
            2. 拓展类的功能


        [举例1]:
            人类: name, age, 吃饭, 睡觉
            医生类: name, age, hospital, 吃饭, 睡觉, 看病, 做手术...

            人类 --> 父类
            医生类 --> 子类

            * 医生类 是一个特殊的 人类

        [举例2]:
            动物类: 名字, 颜色, 吃饭, 睡觉
            猫类: 名字, 颜色, 年龄;  吃饭, 睡觉, 抓鱼, 抓老鼠....
            狗类: 名字, 颜色, 年龄; 吃饭, 睡觉, 啃骨头, 看家, 抓老鼠...

            猫类 是一个特殊的 动物类
            狗类 是一个特殊的 动物类
"""


class Person:  # python3 默认继承自object类
    country = "中国"

    def __init__(self, name):
        self.name = name

    def eat(self):
        print("吃窝窝头...")

    def sleep(self):
        print("躺个平坦地就睡觉啦...")

    def play(self):
        print("玩个过家家~~~~")


class Student(Person):  # 继承自person类
    def study(self):
        print("我是一个好学生, 我热爱我的祖国和学习...")

    # 重写父类的方法, 与父类方法名一样;
    def sleep(self):
        print("啦啦啦啦,看会手机")
        print("哈哈哈哈,吃点小零食")
        print("睡个好觉~~~~")

    def play(self):
        # 关于父类的功能还要用. 手动调用父类的方法 super().方法名()
        super().play()
        # 在这个基础上再拓展一些功能...
        print("电子游戏~~~植物大战僵尸~~王者农药~~~~")


# 1. 子类可以继承父类的属性和方法
s1 = Student("李小花")  # 创建一个子类对象 1. 开辟内存,寸处对象, 2.自动调用init方法(自动调用父类)
s1.eat()  # 子类对象调用父类方法  吃窝窝头...
print(s1.name)
print(s1.country)  # 中国

# 2. 子类可以新增自己的属性和方法
s1.study()

# 3. 子类可以重写父类已有的方法
s1.sleep()  # 子类调用方法, 先找自己类中, 如果没有再去找父类, 在没有,再找祖先类,,都没有,报错...
s1.play()


