"""
    推导式:
        python的一种独有特性, 推导式是可以从一个数据序列构建另一个新的数据序列的结构体;

        列表推导式, 字典推导式, 集合推导式(集合是可变数据类型, 集合中的元素是不可变数据类型)

        1. 列表推导式:
            提供了简单的生成列表的方法

            语法结构:
                1. list = [表达式 for item in 容器]
                2. list = [表达式 for item in 容器 if 条件]
                3. list = [表达式 for item1 in 容器1 for item2 in 容器2]

            执行流程:
                1. 循环遍历出容器中的每个元素item, 应用到前边的表达式中,
                    表达式产生的结果为最终列表中的元素;
                2. 循环遍历出容器中的每个元素item,
                    使用if判断是否满足条件,
                    满足条件的item应用表达式产生新列表中的元素;
                3. 通过两个for循环遍历出容器的元素, 将元素应用到表达式中,
                    组成新列表中的元素;
"""
# set1 = {1, "abc", (1, 2, 3)}
# print(set1)

# set2 = {[1, 2], {"key": "value"}, 100}
# print(set2)  # TypeError: unhashable type: 'list'

# 1. 使用列表推导 产生1-10的数组成的列表
list1 = [x for x in range(1, 11, 1)]
print(list1)  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# 2. 使用列表推导 产生list1中每个元素的2倍组成的列表
list2 = [x * 2 for x in list1]
print(list2)  # [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

# 3. 产生一个列表:0-10的数的平方
list3 = [x ** 2 for x in range(0, 11)]
print(list3)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

# 4. 产生一个列表:1-9的平方
list4 = [x ** 2 for x in range(1, 10)]
print(list4)  # [1, 4, 9, 16, 25, 36, 49, 64, 81]

# 5. 产生一个列表:1-9的2倍的列表
list5 = [x * 2 for x in range(1, 10)]
print(list5)  # [2, 4, 6, 8, 10, 12, 14, 16, 18]

# 6. 求1-10内奇数的2倍组成的列表
list6 = [x * 2 for x in range(1, 11, 2)]
list7 = [x * 2 for x in range(1, 11) if x % 2 == 1]
print(list7)  # [2, 6, 10, 14, 18]

# 7. 获取99乘法表的结果组成的列表
list8 = [x * y for x in range(1, 10) for y in range(1, x+1)]
print(list8)  # [1, 2, 4, 3, 6, 9, 4, 8, 12, 16, 5, 10, 15, 20, 25, 6, 12, 18, 24, 30, 36, 7, 14, 21, 28, 35, 42, 49, 8, 16, 24, 32, 40, 48, 56, 64, 9, 18, 27, 36, 45, 54, 63, 72, 81]

# 8. 将一个嵌套列表转成一个一维列表
list_num = [[1,2,3], [4,5,6], [7,8,9]]
list9 = [x for lst in list_num for x in lst]
print(list9)  # [1, 2, 3, 4, 5, 6, 7, 8, 9]

# 9. 现有一个列表 list1 = [[1,2,3], [4,5,6], [7,8,9]]
#  通过该列表生成一个新列表[1,4,7]
#  通过该列表生成一个新列表[2,5,8]

list10 = [lst[0] for lst in list_num]
print(list10)  # [1, 4, 7]

list11 = [lst[1] for lst in list_num]
print(list11)  # [2, 5, 8]






